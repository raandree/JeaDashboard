Configurations:
  - JeaRoles

JeaRoles:
  Roles:
    #- Path: C:\Program Files\WindowsPowerShell\Modules\Test\RoleCapabilities\ReadEventLog.psrc
    #  VisibleCmdlets:
    #  - Name: Get-EventLog
    #    Parameters:
    #    - Name: List
    #    - Name: LogName
    #    - Name: Newest

    #- Path: C:\Program Files\WindowsPowerShell\Modules\Test\RoleCapabilities\DiskInfo.psrc
    #  VisibleCmdlets:
    #  - Storage\Get-*

    #- Path: C:\Program Files\WindowsPowerShell\Modules\Test\RoleCapabilities\ServiceInfo.psrc
    #  VisibleCmdlets:
    #  - Name: Get-Service
    #    Parameters:
    #    - Name: Name

    #- Path: C:\Program Files\WindowsPowerShell\Modules\Test\RoleCapabilities\ServiceManagement.psrc
    #  VisibleCmdlets:
    #  - '*-Service'

    #- Path: C:\Program Files\WindowsPowerShell\Modules\Management\RoleCapabilities\FileManagement.psrc
    #  VisibleCmdlets: 
    #  - '*-Item*'
    #  VisibleExternalCommands:
    #  - C:\Windows\System32\tree.com

    #- Path: C:\Program Files\WindowsPowerShell\Modules\Management\RoleCapabilities\MachineManagement.psrc
    #  VisibleCmdlets: 
    #  - Test-Connection
    #  - Name: Restart-Computer
    #    Parameters:
    #      Name: ComputerName
    #      ValidatePattern: VDI\d+
    #  VisibleFunctions:
    #  - F1
    #  - F2
    #  FunctionDefinitions:
    #  - Name: F1
    #    ScriptBlock: |
    #      Get-Date
    #      Write-Host Hello World
    #  - Name: F2
    #    ScriptBlock: |
    #      Get-Process | Where-Object { $_.WS -gt 100MB }
    #      Dir C:\
    #  #- Name: F3
    #  #  FilePath: C:\Temp\JeaRoleTest.ps1

    #- Path: C:\Program Files\WindowsPowerShell\Modules\Management\RoleCapabilities\NetworkManagement.psrc
    #  ModulesToImport: NetAdapter
    #  VisibleCmdlets: 
    #  - '*-NetAdapter*'
    #  VisibleExternalCommands:
    #  - C:\Windows\System32\ipconfig.exe

    - Path: C:\Program Files\WindowsPowerShell\Modules\Demos\RoleCapabilities\Demo1.psrc
      VisibleFunctions:
      - Start-xSleep1
      - Start-xSleep2
      - Start-xSleep3
      FunctionDefinitions:
      - Name: Start-xSleep1
        ScriptBlock: |
          param (
              [Parameter(Mandatory)]
              [int]$Seconds
          )

          Start-Sleep -Seconds $Seconds
      - Name: Start-xSleep2
        ScriptBlock: |
          param (
              [Parameter(Mandatory, ParameterSetName = 'Seconds')]
              [int]$Seconds,

              [Parameter(Mandatory, ParameterSetName = 'Milliseconds')]
              [long]$Milliseconds
          )

          Start-Sleep @PSBoundParameters
      - Name: Start-xSleep3
        ScriptBlock: |
          Start-Sleep -Seconds 3

    - Path: C:\Program Files\WindowsPowerShell\Modules\Demos\RoleCapabilities\Demo2.psrc
      VisibleFunctions:
      - Set-xContent
      - Get-xContent
      - Get-ParamSetTest
      - Set-xCredentialsToFile
      FunctionDefinitions:
      - Name: Set-xContent
        ScriptBlock: |
          param (
            [Parameter()]
            [object[]]$Value = 'Test',

            [Parameter(Mandatory, ParameterSetName = 'FileUpload')]
            [Parameter(Mandatory, ParameterSetName = 'Path')]
            [string]$Path,

            [Parameter(Mandatory, ParameterSetName = 'LiteralPath')]
            [string]$LiteralPath,

            [Parameter(Mandatory, ParameterSetName = 'FileUpload')]
            [string]$FilePath,

            [Parameter(ParameterSetName = 'FileUpload')]
            [switch]$DoNotArchiveInputFile
          )
          if ($FilePath)
          {
            get-content $filepath | set-content $path
            if (-not $DoNotArchiveInputFile) {
              del $FilePath -force
            }
          }
          else
          {
            Set-Content @PSBoundParameters
          }
      - Name: Get-xContent
        ScriptBlock: |
          param (
            [Parameter(Mandatory, ParameterSetName = 'Path')]
            [string]$Path,

            [Parameter(Mandatory, ParameterSetName = 'LiteralPath')]
            [string]$LiteralPath,

            [switch]$Raw
          )

          Get-Content @PSBoundParameters
      
      - Name: Set-xCredentialsToFile
        ScriptBlock: |
          param (
            [Parameter(Mandatory, ParameterSetName = 'Path')]
            [string]$Path,

            [Parameter(Mandatory, ParameterSetName = 'LiteralPath')]
            [string]$LiteralPath,

            [Parameter()]
            [pscredential]$Credential,

            [Parameter()]
            [System.Security.SecureString]$Password
          )

          Get-Date
      - Name: Get-ParamSetTest
        ScriptBlock: |
          [CmdletBinding(DefaultParameterSetName = 'ps1')]
          param (
            [Parameter()]
            [object[]]$P0 = 'Test',

            [Parameter(Mandatory, ParameterSetName = 'PS1')]
            [string]$P10,

            [Parameter(Mandatory, ParameterSetName = 'PS1')]
            [string]$P11,

            [Parameter(Mandatory, ParameterSetName = 'PS2')]
            [string]$P20,

            [Parameter(ParameterSetName = 'PS2')]
            [string]$P21,

            [Parameter(Mandatory)]
            [string]$P31,

            [Parameter()]
            [string]$P32
          )

          $PSBoundParameters
